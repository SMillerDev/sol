# update_fastlane

default_platform(:mac)

platform :mac do
  
  xcode_select "/Applications/Xcode.app"

  private_lane :gh_release do |options|
    version = get_version_number(xcodeproj: "./macos/sol.xcodeproj")

    set_github_release(
      repository_name: "ospfranco/sol",
      api_token: ENV["GITHUB_TOKEN"],
      name: version,
      tag_name: version,
      upload_assets: [options[:upload_assets]],
      is_generate_release_notes: true,
      is_draft: true
    )
  end

  private_lane :build_release do |options|
    sh("npm", "run", "bump")

    version = get_version_number(xcodeproj: "./macos/sol.xcodeproj")

    path = ENV["PWD"]
    appFileName = path + "Sol.app"
    zipFileName = path + "releases/" + version + ".zip"
    
    gym(
      scheme: "release",
      configuration: "Release",
      clean: true,
      workspace: "./macos/sol.xcworkspace",
      output_directory: path,
      export_method: "developer-id"
    )

    notarize(
      package: appFileName,
      bundle_id: "com.ospfranco.sol",
      username: "ospfranco@protonmail.com",
      asc_provider: "24CMR7378R"
    )

    zip(
      path: appFileName,
      output_path: zipFileName,
      symlinks: true
    )

    zipFileName
  end

  lane :release do |options|
    zip = build_release()
    gh_release(upload_assets: zip)

    sh("npm", "run", "appcast")

    puts Dir.pwd
    Dir.chdir("..") do
      sh("git", "add", ".")
      sh("git", "commit", "-m", version)
      sh("git", "push")
    end

    next if is_ci

    sh("cp", "-R", appFileName, "/Applications/")

    sh("open", "/Applications/Sol.app")

    sh("pingme", "Sol " + version + " released")
  end

  lane :dev do |options|
    path = "/Applications/"

    gym(
      scheme: "release",
      workspace: "./macos/sol.xcworkspace",
      output_directory: path,
      export_method: "development",
      silent: true
    )
  end
end
